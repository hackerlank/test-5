// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: userinfo.proto

#ifndef PROTOBUF_userinfo_2eproto__INCLUDED
#define PROTOBUF_userinfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace userinfo {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_userinfo_2eproto();
void protobuf_AssignDesc_userinfo_2eproto();
void protobuf_ShutdownFile_userinfo_2eproto();

class Card;
class DdzDeskResultinfo;
class DdzDeskinfo;
class DdzMatchInfo;
class DdzSelfRoomInfo;
class DdzUserResultinfo;
class DeskNnUserinfo;
class DeskUserinfo;
class NNDeskResultinfo;
class NNUserResultinfo;
class NnDeskinfo;
class NnMatchInfo;
class NnSelfRoomInfo;
class NnUserBet;
class NnUserBetList;
class NnUserPoker;
class NnUserPokerList;
class Userinfo;

// ===================================================================

class Userinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.Userinfo) */ {
 public:
  Userinfo();
  virtual ~Userinfo();

  Userinfo(const Userinfo& from);

  inline Userinfo& operator=(const Userinfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Userinfo& default_instance();

  void Swap(Userinfo* other);

  // implements Message ----------------------------------------------

  inline Userinfo* New() const { return New(NULL); }

  Userinfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Userinfo& from);
  void MergeFrom(const Userinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Userinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional bytes uname = 2;
  void clear_uname();
  static const int kUnameFieldNumber = 2;
  const ::std::string& uname() const;
  void set_uname(const ::std::string& value);
  void set_uname(const char* value);
  void set_uname(const void* value, size_t size);
  ::std::string* mutable_uname();
  ::std::string* release_uname();
  void set_allocated_uname(::std::string* uname);

  // optional uint32 coinnum = 3;
  void clear_coinnum();
  static const int kCoinnumFieldNumber = 3;
  ::google::protobuf::uint32 coinnum() const;
  void set_coinnum(::google::protobuf::uint32 value);

  // optional uint32 integral = 4;
  void clear_integral();
  static const int kIntegralFieldNumber = 4;
  ::google::protobuf::uint32 integral() const;
  void set_integral(::google::protobuf::uint32 value);

  // optional uint32 ingotnum = 5;
  void clear_ingotnum();
  static const int kIngotnumFieldNumber = 5;
  ::google::protobuf::uint32 ingotnum() const;
  void set_ingotnum(::google::protobuf::uint32 value);

  // optional uint32 gender = 6;
  void clear_gender();
  static const int kGenderFieldNumber = 6;
  ::google::protobuf::uint32 gender() const;
  void set_gender(::google::protobuf::uint32 value);

  // optional bytes headurl = 7;
  void clear_headurl();
  static const int kHeadurlFieldNumber = 7;
  const ::std::string& headurl() const;
  void set_headurl(const ::std::string& value);
  void set_headurl(const char* value);
  void set_headurl(const void* value, size_t size);
  ::std::string* mutable_headurl();
  ::std::string* release_headurl();
  void set_allocated_headurl(::std::string* headurl);

  // optional uint32 nowtime = 8;
  void clear_nowtime();
  static const int kNowtimeFieldNumber = 8;
  ::google::protobuf::uint32 nowtime() const;
  void set_nowtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:userinfo.Userinfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uname_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 coinnum_;
  ::google::protobuf::uint32 integral_;
  ::google::protobuf::uint32 ingotnum_;
  ::google::protobuf::internal::ArenaStringPtr headurl_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 nowtime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static Userinfo* default_instance_;
};
// -------------------------------------------------------------------

class Card : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.Card) */ {
 public:
  Card();
  virtual ~Card();

  Card(const Card& from);

  inline Card& operator=(const Card& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Card& default_instance();

  void Swap(Card* other);

  // implements Message ----------------------------------------------

  inline Card* New() const { return New(NULL); }

  Card* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Card& from);
  void MergeFrom(const Card& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Card* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:userinfo.Card)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static Card* default_instance_;
};
// -------------------------------------------------------------------

class DeskUserinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.DeskUserinfo) */ {
 public:
  DeskUserinfo();
  virtual ~DeskUserinfo();

  DeskUserinfo(const DeskUserinfo& from);

  inline DeskUserinfo& operator=(const DeskUserinfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeskUserinfo& default_instance();

  void Swap(DeskUserinfo* other);

  // implements Message ----------------------------------------------

  inline DeskUserinfo* New() const { return New(NULL); }

  DeskUserinfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeskUserinfo& from);
  void MergeFrom(const DeskUserinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeskUserinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional bytes uname = 2;
  void clear_uname();
  static const int kUnameFieldNumber = 2;
  const ::std::string& uname() const;
  void set_uname(const ::std::string& value);
  void set_uname(const char* value);
  void set_uname(const void* value, size_t size);
  ::std::string* mutable_uname();
  ::std::string* release_uname();
  void set_allocated_uname(::std::string* uname);

  // optional uint32 coinnum = 3;
  void clear_coinnum();
  static const int kCoinnumFieldNumber = 3;
  ::google::protobuf::uint32 coinnum() const;
  void set_coinnum(::google::protobuf::uint32 value);

  // optional bytes headurl = 4;
  void clear_headurl();
  static const int kHeadurlFieldNumber = 4;
  const ::std::string& headurl() const;
  void set_headurl(const ::std::string& value);
  void set_headurl(const char* value);
  void set_headurl(const void* value, size_t size);
  ::std::string* mutable_headurl();
  ::std::string* release_headurl();
  void set_allocated_headurl(::std::string* headurl);

  // optional uint32 deskid = 5;
  void clear_deskid();
  static const int kDeskidFieldNumber = 5;
  ::google::protobuf::uint32 deskid() const;
  void set_deskid(::google::protobuf::uint32 value);

  // optional uint32 pos = 6;
  void clear_pos();
  static const int kPosFieldNumber = 6;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // optional uint32 status = 7;
  void clear_status();
  static const int kStatusFieldNumber = 7;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 offline = 8;
  void clear_offline();
  static const int kOfflineFieldNumber = 8;
  ::google::protobuf::uint32 offline() const;
  void set_offline(::google::protobuf::uint32 value);

  // optional uint32 ifauto = 9;
  void clear_ifauto();
  static const int kIfautoFieldNumber = 9;
  ::google::protobuf::uint32 ifauto() const;
  void set_ifauto(::google::protobuf::uint32 value);

  // optional uint32 ifdouble = 10;
  void clear_ifdouble();
  static const int kIfdoubleFieldNumber = 10;
  ::google::protobuf::uint32 ifdouble() const;
  void set_ifdouble(::google::protobuf::uint32 value);

  // optional uint32 ifshowcard = 11;
  void clear_ifshowcard();
  static const int kIfshowcardFieldNumber = 11;
  ::google::protobuf::uint32 ifshowcard() const;
  void set_ifshowcard(::google::protobuf::uint32 value);

  // repeated .userinfo.Card poker = 12;
  int poker_size() const;
  void clear_poker();
  static const int kPokerFieldNumber = 12;
  const ::userinfo::Card& poker(int index) const;
  ::userinfo::Card* mutable_poker(int index);
  ::userinfo::Card* add_poker();
  ::google::protobuf::RepeatedPtrField< ::userinfo::Card >*
      mutable_poker();
  const ::google::protobuf::RepeatedPtrField< ::userinfo::Card >&
      poker() const;

  // optional uint32 gender = 13;
  void clear_gender();
  static const int kGenderFieldNumber = 13;
  ::google::protobuf::uint32 gender() const;
  void set_gender(::google::protobuf::uint32 value);

  // optional uint32 integral = 14;
  void clear_integral();
  static const int kIntegralFieldNumber = 14;
  ::google::protobuf::uint32 integral() const;
  void set_integral(::google::protobuf::uint32 value);

  // optional int32 gamevalue = 15;
  void clear_gamevalue();
  static const int kGamevalueFieldNumber = 15;
  ::google::protobuf::int32 gamevalue() const;
  void set_gamevalue(::google::protobuf::int32 value);

  // optional uint32 pokerlen = 16;
  void clear_pokerlen();
  static const int kPokerlenFieldNumber = 16;
  ::google::protobuf::uint32 pokerlen() const;
  void set_pokerlen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:userinfo.DeskUserinfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uname_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 coinnum_;
  ::google::protobuf::internal::ArenaStringPtr headurl_;
  ::google::protobuf::uint32 deskid_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 offline_;
  ::google::protobuf::uint32 ifauto_;
  ::google::protobuf::uint32 ifdouble_;
  ::google::protobuf::RepeatedPtrField< ::userinfo::Card > poker_;
  ::google::protobuf::uint32 ifshowcard_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 integral_;
  ::google::protobuf::int32 gamevalue_;
  ::google::protobuf::uint32 pokerlen_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static DeskUserinfo* default_instance_;
};
// -------------------------------------------------------------------

class DdzDeskinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.DdzDeskinfo) */ {
 public:
  DdzDeskinfo();
  virtual ~DdzDeskinfo();

  DdzDeskinfo(const DdzDeskinfo& from);

  inline DdzDeskinfo& operator=(const DdzDeskinfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DdzDeskinfo& default_instance();

  void Swap(DdzDeskinfo* other);

  // implements Message ----------------------------------------------

  inline DdzDeskinfo* New() const { return New(NULL); }

  DdzDeskinfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DdzDeskinfo& from);
  void MergeFrom(const DdzDeskinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DdzDeskinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 deskid = 1;
  void clear_deskid();
  static const int kDeskidFieldNumber = 1;
  ::google::protobuf::uint32 deskid() const;
  void set_deskid(::google::protobuf::uint32 value);

  // optional uint32 status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 curpos = 3;
  void clear_curpos();
  static const int kCurposFieldNumber = 3;
  ::google::protobuf::uint32 curpos() const;
  void set_curpos(::google::protobuf::uint32 value);

  // optional uint32 point = 4;
  void clear_point();
  static const int kPointFieldNumber = 4;
  ::google::protobuf::uint32 point() const;
  void set_point(::google::protobuf::uint32 value);

  // optional uint32 bombnum = 5;
  void clear_bombnum();
  static const int kBombnumFieldNumber = 5;
  ::google::protobuf::uint32 bombnum() const;
  void set_bombnum(::google::protobuf::uint32 value);

  // repeated .userinfo.Card lastpoker = 6;
  int lastpoker_size() const;
  void clear_lastpoker();
  static const int kLastpokerFieldNumber = 6;
  const ::userinfo::Card& lastpoker(int index) const;
  ::userinfo::Card* mutable_lastpoker(int index);
  ::userinfo::Card* add_lastpoker();
  ::google::protobuf::RepeatedPtrField< ::userinfo::Card >*
      mutable_lastpoker();
  const ::google::protobuf::RepeatedPtrField< ::userinfo::Card >&
      lastpoker() const;

  // repeated .userinfo.Card putpoker = 7;
  int putpoker_size() const;
  void clear_putpoker();
  static const int kPutpokerFieldNumber = 7;
  const ::userinfo::Card& putpoker(int index) const;
  ::userinfo::Card* mutable_putpoker(int index);
  ::userinfo::Card* add_putpoker();
  ::google::protobuf::RepeatedPtrField< ::userinfo::Card >*
      mutable_putpoker();
  const ::google::protobuf::RepeatedPtrField< ::userinfo::Card >&
      putpoker() const;

  // repeated .userinfo.DeskUserinfo userlist = 8;
  int userlist_size() const;
  void clear_userlist();
  static const int kUserlistFieldNumber = 8;
  const ::userinfo::DeskUserinfo& userlist(int index) const;
  ::userinfo::DeskUserinfo* mutable_userlist(int index);
  ::userinfo::DeskUserinfo* add_userlist();
  ::google::protobuf::RepeatedPtrField< ::userinfo::DeskUserinfo >*
      mutable_userlist();
  const ::google::protobuf::RepeatedPtrField< ::userinfo::DeskUserinfo >&
      userlist() const;

  // repeated .userinfo.Card pubpoker = 9;
  int pubpoker_size() const;
  void clear_pubpoker();
  static const int kPubpokerFieldNumber = 9;
  const ::userinfo::Card& pubpoker(int index) const;
  ::userinfo::Card* mutable_pubpoker(int index);
  ::userinfo::Card* add_pubpoker();
  ::google::protobuf::RepeatedPtrField< ::userinfo::Card >*
      mutable_pubpoker();
  const ::google::protobuf::RepeatedPtrField< ::userinfo::Card >&
      pubpoker() const;

  // optional uint32 matchid = 10;
  void clear_matchid();
  static const int kMatchidFieldNumber = 10;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:userinfo.DdzDeskinfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 deskid_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 curpos_;
  ::google::protobuf::uint32 point_;
  ::google::protobuf::RepeatedPtrField< ::userinfo::Card > lastpoker_;
  ::google::protobuf::RepeatedPtrField< ::userinfo::Card > putpoker_;
  ::google::protobuf::uint32 bombnum_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::RepeatedPtrField< ::userinfo::DeskUserinfo > userlist_;
  ::google::protobuf::RepeatedPtrField< ::userinfo::Card > pubpoker_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static DdzDeskinfo* default_instance_;
};
// -------------------------------------------------------------------

class DdzDeskResultinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.DdzDeskResultinfo) */ {
 public:
  DdzDeskResultinfo();
  virtual ~DdzDeskResultinfo();

  DdzDeskResultinfo(const DdzDeskResultinfo& from);

  inline DdzDeskResultinfo& operator=(const DdzDeskResultinfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DdzDeskResultinfo& default_instance();

  void Swap(DdzDeskResultinfo* other);

  // implements Message ----------------------------------------------

  inline DdzDeskResultinfo* New() const { return New(NULL); }

  DdzDeskResultinfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DdzDeskResultinfo& from);
  void MergeFrom(const DdzDeskResultinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DdzDeskResultinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 point = 2;
  void clear_point();
  static const int kPointFieldNumber = 2;
  ::google::protobuf::uint32 point() const;
  void set_point(::google::protobuf::uint32 value);

  // optional uint32 bombnum = 3;
  void clear_bombnum();
  static const int kBombnumFieldNumber = 3;
  ::google::protobuf::uint32 bombnum() const;
  void set_bombnum(::google::protobuf::uint32 value);

  // optional uint32 ifspring = 4;
  void clear_ifspring();
  static const int kIfspringFieldNumber = 4;
  ::google::protobuf::uint32 ifspring() const;
  void set_ifspring(::google::protobuf::uint32 value);

  // repeated .userinfo.DdzUserResultinfo userlist = 5;
  int userlist_size() const;
  void clear_userlist();
  static const int kUserlistFieldNumber = 5;
  const ::userinfo::DdzUserResultinfo& userlist(int index) const;
  ::userinfo::DdzUserResultinfo* mutable_userlist(int index);
  ::userinfo::DdzUserResultinfo* add_userlist();
  ::google::protobuf::RepeatedPtrField< ::userinfo::DdzUserResultinfo >*
      mutable_userlist();
  const ::google::protobuf::RepeatedPtrField< ::userinfo::DdzUserResultinfo >&
      userlist() const;

  // @@protoc_insertion_point(class_scope:userinfo.DdzDeskResultinfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 point_;
  ::google::protobuf::uint32 bombnum_;
  ::google::protobuf::uint32 ifspring_;
  ::google::protobuf::RepeatedPtrField< ::userinfo::DdzUserResultinfo > userlist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static DdzDeskResultinfo* default_instance_;
};
// -------------------------------------------------------------------

class DdzUserResultinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.DdzUserResultinfo) */ {
 public:
  DdzUserResultinfo();
  virtual ~DdzUserResultinfo();

  DdzUserResultinfo(const DdzUserResultinfo& from);

  inline DdzUserResultinfo& operator=(const DdzUserResultinfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DdzUserResultinfo& default_instance();

  void Swap(DdzUserResultinfo* other);

  // implements Message ----------------------------------------------

  inline DdzUserResultinfo* New() const { return New(NULL); }

  DdzUserResultinfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DdzUserResultinfo& from);
  void MergeFrom(const DdzUserResultinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DdzUserResultinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional uint32 pos = 2;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // optional uint32 point = 3;
  void clear_point();
  static const int kPointFieldNumber = 3;
  ::google::protobuf::uint32 point() const;
  void set_point(::google::protobuf::uint32 value);

  // optional uint32 result = 4;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional uint32 value = 5;
  void clear_value();
  static const int kValueFieldNumber = 5;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // optional uint32 coin = 6;
  void clear_coin();
  static const int kCoinFieldNumber = 6;
  ::google::protobuf::uint32 coin() const;
  void set_coin(::google::protobuf::uint32 value);

  // optional int32 gamevalue = 7;
  void clear_gamevalue();
  static const int kGamevalueFieldNumber = 7;
  ::google::protobuf::int32 gamevalue() const;
  void set_gamevalue(::google::protobuf::int32 value);

  // optional uint32 rank = 8;
  void clear_rank();
  static const int kRankFieldNumber = 8;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 leftvalue = 9;
  void clear_leftvalue();
  static const int kLeftvalueFieldNumber = 9;
  ::google::protobuf::uint32 leftvalue() const;
  void set_leftvalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:userinfo.DdzUserResultinfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 point_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::int32 gamevalue_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 leftvalue_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static DdzUserResultinfo* default_instance_;
};
// -------------------------------------------------------------------

class DdzMatchInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.DdzMatchInfo) */ {
 public:
  DdzMatchInfo();
  virtual ~DdzMatchInfo();

  DdzMatchInfo(const DdzMatchInfo& from);

  inline DdzMatchInfo& operator=(const DdzMatchInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DdzMatchInfo& default_instance();

  void Swap(DdzMatchInfo* other);

  // implements Message ----------------------------------------------

  inline DdzMatchInfo* New() const { return New(NULL); }

  DdzMatchInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DdzMatchInfo& from);
  void MergeFrom(const DdzMatchInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DdzMatchInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // optional uint32 trunindex = 2;
  void clear_trunindex();
  static const int kTrunindexFieldNumber = 2;
  ::google::protobuf::uint32 trunindex() const;
  void set_trunindex(::google::protobuf::uint32 value);

  // optional uint32 curnum = 3;
  void clear_curnum();
  static const int kCurnumFieldNumber = 3;
  ::google::protobuf::uint32 curnum() const;
  void set_curnum(::google::protobuf::uint32 value);

  // optional int32 gamevalue = 4;
  void clear_gamevalue();
  static const int kGamevalueFieldNumber = 4;
  ::google::protobuf::int32 gamevalue() const;
  void set_gamevalue(::google::protobuf::int32 value);

  // optional int32 ifmatch = 5;
  void clear_ifmatch();
  static const int kIfmatchFieldNumber = 5;
  ::google::protobuf::int32 ifmatch() const;
  void set_ifmatch(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:userinfo.DdzMatchInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 trunindex_;
  ::google::protobuf::uint32 curnum_;
  ::google::protobuf::int32 gamevalue_;
  ::google::protobuf::int32 ifmatch_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static DdzMatchInfo* default_instance_;
};
// -------------------------------------------------------------------

class DdzSelfRoomInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.DdzSelfRoomInfo) */ {
 public:
  DdzSelfRoomInfo();
  virtual ~DdzSelfRoomInfo();

  DdzSelfRoomInfo(const DdzSelfRoomInfo& from);

  inline DdzSelfRoomInfo& operator=(const DdzSelfRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DdzSelfRoomInfo& default_instance();

  void Swap(DdzSelfRoomInfo* other);

  // implements Message ----------------------------------------------

  inline DdzSelfRoomInfo* New() const { return New(NULL); }

  DdzSelfRoomInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DdzSelfRoomInfo& from);
  void MergeFrom(const DdzSelfRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DdzSelfRoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // optional bytes roomcode = 2;
  void clear_roomcode();
  static const int kRoomcodeFieldNumber = 2;
  const ::std::string& roomcode() const;
  void set_roomcode(const ::std::string& value);
  void set_roomcode(const char* value);
  void set_roomcode(const void* value, size_t size);
  ::std::string* mutable_roomcode();
  ::std::string* release_roomcode();
  void set_allocated_roomcode(::std::string* roomcode);

  // optional uint32 endtime = 3;
  void clear_endtime();
  static const int kEndtimeFieldNumber = 3;
  ::google::protobuf::uint32 endtime() const;
  void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 createuid = 4;
  void clear_createuid();
  static const int kCreateuidFieldNumber = 4;
  ::google::protobuf::uint32 createuid() const;
  void set_createuid(::google::protobuf::uint32 value);

  // optional uint32 basecoin = 5;
  void clear_basecoin();
  static const int kBasecoinFieldNumber = 5;
  ::google::protobuf::uint32 basecoin() const;
  void set_basecoin(::google::protobuf::uint32 value);

  // optional uint32 basetimes = 6;
  void clear_basetimes();
  static const int kBasetimesFieldNumber = 6;
  ::google::protobuf::uint32 basetimes() const;
  void set_basetimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:userinfo.DdzSelfRoomInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr roomcode_;
  ::google::protobuf::uint32 roomid_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 createuid_;
  ::google::protobuf::uint32 basecoin_;
  ::google::protobuf::uint32 basetimes_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static DdzSelfRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class DeskNnUserinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.DeskNnUserinfo) */ {
 public:
  DeskNnUserinfo();
  virtual ~DeskNnUserinfo();

  DeskNnUserinfo(const DeskNnUserinfo& from);

  inline DeskNnUserinfo& operator=(const DeskNnUserinfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeskNnUserinfo& default_instance();

  void Swap(DeskNnUserinfo* other);

  // implements Message ----------------------------------------------

  inline DeskNnUserinfo* New() const { return New(NULL); }

  DeskNnUserinfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeskNnUserinfo& from);
  void MergeFrom(const DeskNnUserinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeskNnUserinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional bytes uname = 2;
  void clear_uname();
  static const int kUnameFieldNumber = 2;
  const ::std::string& uname() const;
  void set_uname(const ::std::string& value);
  void set_uname(const char* value);
  void set_uname(const void* value, size_t size);
  ::std::string* mutable_uname();
  ::std::string* release_uname();
  void set_allocated_uname(::std::string* uname);

  // optional uint32 coinnum = 3;
  void clear_coinnum();
  static const int kCoinnumFieldNumber = 3;
  ::google::protobuf::uint32 coinnum() const;
  void set_coinnum(::google::protobuf::uint32 value);

  // optional bytes headurl = 4;
  void clear_headurl();
  static const int kHeadurlFieldNumber = 4;
  const ::std::string& headurl() const;
  void set_headurl(const ::std::string& value);
  void set_headurl(const char* value);
  void set_headurl(const void* value, size_t size);
  ::std::string* mutable_headurl();
  ::std::string* release_headurl();
  void set_allocated_headurl(::std::string* headurl);

  // optional uint32 deskid = 5;
  void clear_deskid();
  static const int kDeskidFieldNumber = 5;
  ::google::protobuf::uint32 deskid() const;
  void set_deskid(::google::protobuf::uint32 value);

  // optional uint32 pos = 6;
  void clear_pos();
  static const int kPosFieldNumber = 6;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // optional uint32 status = 7;
  void clear_status();
  static const int kStatusFieldNumber = 7;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 offline = 8;
  void clear_offline();
  static const int kOfflineFieldNumber = 8;
  ::google::protobuf::uint32 offline() const;
  void set_offline(::google::protobuf::uint32 value);

  // repeated .userinfo.Card poker = 9;
  int poker_size() const;
  void clear_poker();
  static const int kPokerFieldNumber = 9;
  const ::userinfo::Card& poker(int index) const;
  ::userinfo::Card* mutable_poker(int index);
  ::userinfo::Card* add_poker();
  ::google::protobuf::RepeatedPtrField< ::userinfo::Card >*
      mutable_poker();
  const ::google::protobuf::RepeatedPtrField< ::userinfo::Card >&
      poker() const;

  // optional uint32 gender = 10;
  void clear_gender();
  static const int kGenderFieldNumber = 10;
  ::google::protobuf::uint32 gender() const;
  void set_gender(::google::protobuf::uint32 value);

  // optional uint32 integral = 11;
  void clear_integral();
  static const int kIntegralFieldNumber = 11;
  ::google::protobuf::uint32 integral() const;
  void set_integral(::google::protobuf::uint32 value);

  // optional uint32 gamevalue = 12;
  void clear_gamevalue();
  static const int kGamevalueFieldNumber = 12;
  ::google::protobuf::uint32 gamevalue() const;
  void set_gamevalue(::google::protobuf::uint32 value);

  // optional uint32 times = 13;
  void clear_times();
  static const int kTimesFieldNumber = 13;
  ::google::protobuf::uint32 times() const;
  void set_times(::google::protobuf::uint32 value);

  // optional uint32 betnum = 14;
  void clear_betnum();
  static const int kBetnumFieldNumber = 14;
  ::google::protobuf::uint32 betnum() const;
  void set_betnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:userinfo.DeskNnUserinfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uname_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 coinnum_;
  ::google::protobuf::internal::ArenaStringPtr headurl_;
  ::google::protobuf::uint32 deskid_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 offline_;
  ::google::protobuf::RepeatedPtrField< ::userinfo::Card > poker_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 integral_;
  ::google::protobuf::uint32 gamevalue_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 betnum_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static DeskNnUserinfo* default_instance_;
};
// -------------------------------------------------------------------

class NnDeskinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.NnDeskinfo) */ {
 public:
  NnDeskinfo();
  virtual ~NnDeskinfo();

  NnDeskinfo(const NnDeskinfo& from);

  inline NnDeskinfo& operator=(const NnDeskinfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NnDeskinfo& default_instance();

  void Swap(NnDeskinfo* other);

  // implements Message ----------------------------------------------

  inline NnDeskinfo* New() const { return New(NULL); }

  NnDeskinfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NnDeskinfo& from);
  void MergeFrom(const NnDeskinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NnDeskinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 deskid = 1;
  void clear_deskid();
  static const int kDeskidFieldNumber = 1;
  ::google::protobuf::uint32 deskid() const;
  void set_deskid(::google::protobuf::uint32 value);

  // optional uint32 status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 hostpos = 3;
  void clear_hostpos();
  static const int kHostposFieldNumber = 3;
  ::google::protobuf::uint32 hostpos() const;
  void set_hostpos(::google::protobuf::uint32 value);

  // optional uint32 times = 4;
  void clear_times();
  static const int kTimesFieldNumber = 4;
  ::google::protobuf::uint32 times() const;
  void set_times(::google::protobuf::uint32 value);

  // repeated .userinfo.DeskNnUserinfo userlist = 5;
  int userlist_size() const;
  void clear_userlist();
  static const int kUserlistFieldNumber = 5;
  const ::userinfo::DeskNnUserinfo& userlist(int index) const;
  ::userinfo::DeskNnUserinfo* mutable_userlist(int index);
  ::userinfo::DeskNnUserinfo* add_userlist();
  ::google::protobuf::RepeatedPtrField< ::userinfo::DeskNnUserinfo >*
      mutable_userlist();
  const ::google::protobuf::RepeatedPtrField< ::userinfo::DeskNnUserinfo >&
      userlist() const;

  // optional uint32 matchid = 6;
  void clear_matchid();
  static const int kMatchidFieldNumber = 6;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:userinfo.NnDeskinfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 deskid_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 hostpos_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::RepeatedPtrField< ::userinfo::DeskNnUserinfo > userlist_;
  ::google::protobuf::uint32 matchid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static NnDeskinfo* default_instance_;
};
// -------------------------------------------------------------------

class NnUserPokerList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.NnUserPokerList) */ {
 public:
  NnUserPokerList();
  virtual ~NnUserPokerList();

  NnUserPokerList(const NnUserPokerList& from);

  inline NnUserPokerList& operator=(const NnUserPokerList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NnUserPokerList& default_instance();

  void Swap(NnUserPokerList* other);

  // implements Message ----------------------------------------------

  inline NnUserPokerList* New() const { return New(NULL); }

  NnUserPokerList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NnUserPokerList& from);
  void MergeFrom(const NnUserPokerList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NnUserPokerList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .userinfo.NnUserPoker userlist = 1;
  int userlist_size() const;
  void clear_userlist();
  static const int kUserlistFieldNumber = 1;
  const ::userinfo::NnUserPoker& userlist(int index) const;
  ::userinfo::NnUserPoker* mutable_userlist(int index);
  ::userinfo::NnUserPoker* add_userlist();
  ::google::protobuf::RepeatedPtrField< ::userinfo::NnUserPoker >*
      mutable_userlist();
  const ::google::protobuf::RepeatedPtrField< ::userinfo::NnUserPoker >&
      userlist() const;

  // @@protoc_insertion_point(class_scope:userinfo.NnUserPokerList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::userinfo::NnUserPoker > userlist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static NnUserPokerList* default_instance_;
};
// -------------------------------------------------------------------

class NnUserPoker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.NnUserPoker) */ {
 public:
  NnUserPoker();
  virtual ~NnUserPoker();

  NnUserPoker(const NnUserPoker& from);

  inline NnUserPoker& operator=(const NnUserPoker& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NnUserPoker& default_instance();

  void Swap(NnUserPoker* other);

  // implements Message ----------------------------------------------

  inline NnUserPoker* New() const { return New(NULL); }

  NnUserPoker* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NnUserPoker& from);
  void MergeFrom(const NnUserPoker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NnUserPoker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userpos = 1;
  void clear_userpos();
  static const int kUserposFieldNumber = 1;
  ::google::protobuf::uint32 userpos() const;
  void set_userpos(::google::protobuf::uint32 value);

  // repeated .userinfo.Card pokerlist = 2;
  int pokerlist_size() const;
  void clear_pokerlist();
  static const int kPokerlistFieldNumber = 2;
  const ::userinfo::Card& pokerlist(int index) const;
  ::userinfo::Card* mutable_pokerlist(int index);
  ::userinfo::Card* add_pokerlist();
  ::google::protobuf::RepeatedPtrField< ::userinfo::Card >*
      mutable_pokerlist();
  const ::google::protobuf::RepeatedPtrField< ::userinfo::Card >&
      pokerlist() const;

  // @@protoc_insertion_point(class_scope:userinfo.NnUserPoker)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::userinfo::Card > pokerlist_;
  ::google::protobuf::uint32 userpos_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static NnUserPoker* default_instance_;
};
// -------------------------------------------------------------------

class NNDeskResultinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.NNDeskResultinfo) */ {
 public:
  NNDeskResultinfo();
  virtual ~NNDeskResultinfo();

  NNDeskResultinfo(const NNDeskResultinfo& from);

  inline NNDeskResultinfo& operator=(const NNDeskResultinfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NNDeskResultinfo& default_instance();

  void Swap(NNDeskResultinfo* other);

  // implements Message ----------------------------------------------

  inline NNDeskResultinfo* New() const { return New(NULL); }

  NNDeskResultinfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NNDeskResultinfo& from);
  void MergeFrom(const NNDeskResultinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NNDeskResultinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 times = 2;
  void clear_times();
  static const int kTimesFieldNumber = 2;
  ::google::protobuf::uint32 times() const;
  void set_times(::google::protobuf::uint32 value);

  // repeated .userinfo.NNUserResultinfo userlist = 5;
  int userlist_size() const;
  void clear_userlist();
  static const int kUserlistFieldNumber = 5;
  const ::userinfo::NNUserResultinfo& userlist(int index) const;
  ::userinfo::NNUserResultinfo* mutable_userlist(int index);
  ::userinfo::NNUserResultinfo* add_userlist();
  ::google::protobuf::RepeatedPtrField< ::userinfo::NNUserResultinfo >*
      mutable_userlist();
  const ::google::protobuf::RepeatedPtrField< ::userinfo::NNUserResultinfo >&
      userlist() const;

  // @@protoc_insertion_point(class_scope:userinfo.NNDeskResultinfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::RepeatedPtrField< ::userinfo::NNUserResultinfo > userlist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static NNDeskResultinfo* default_instance_;
};
// -------------------------------------------------------------------

class NNUserResultinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.NNUserResultinfo) */ {
 public:
  NNUserResultinfo();
  virtual ~NNUserResultinfo();

  NNUserResultinfo(const NNUserResultinfo& from);

  inline NNUserResultinfo& operator=(const NNUserResultinfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NNUserResultinfo& default_instance();

  void Swap(NNUserResultinfo* other);

  // implements Message ----------------------------------------------

  inline NNUserResultinfo* New() const { return New(NULL); }

  NNUserResultinfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NNUserResultinfo& from);
  void MergeFrom(const NNUserResultinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NNUserResultinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional uint32 pos = 2;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // optional uint32 times = 3;
  void clear_times();
  static const int kTimesFieldNumber = 3;
  ::google::protobuf::uint32 times() const;
  void set_times(::google::protobuf::uint32 value);

  // optional uint32 result = 4;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional uint32 value = 5;
  void clear_value();
  static const int kValueFieldNumber = 5;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // optional uint32 coin = 6;
  void clear_coin();
  static const int kCoinFieldNumber = 6;
  ::google::protobuf::uint32 coin() const;
  void set_coin(::google::protobuf::uint32 value);

  // optional int32 gamevalue = 7;
  void clear_gamevalue();
  static const int kGamevalueFieldNumber = 7;
  ::google::protobuf::int32 gamevalue() const;
  void set_gamevalue(::google::protobuf::int32 value);

  // optional uint32 rank = 8;
  void clear_rank();
  static const int kRankFieldNumber = 8;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 leftvalue = 9;
  void clear_leftvalue();
  static const int kLeftvalueFieldNumber = 9;
  ::google::protobuf::uint32 leftvalue() const;
  void set_leftvalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:userinfo.NNUserResultinfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::int32 gamevalue_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 leftvalue_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static NNUserResultinfo* default_instance_;
};
// -------------------------------------------------------------------

class NnUserBetList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.NnUserBetList) */ {
 public:
  NnUserBetList();
  virtual ~NnUserBetList();

  NnUserBetList(const NnUserBetList& from);

  inline NnUserBetList& operator=(const NnUserBetList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NnUserBetList& default_instance();

  void Swap(NnUserBetList* other);

  // implements Message ----------------------------------------------

  inline NnUserBetList* New() const { return New(NULL); }

  NnUserBetList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NnUserBetList& from);
  void MergeFrom(const NnUserBetList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NnUserBetList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .userinfo.NnUserBet userlist = 1;
  int userlist_size() const;
  void clear_userlist();
  static const int kUserlistFieldNumber = 1;
  const ::userinfo::NnUserBet& userlist(int index) const;
  ::userinfo::NnUserBet* mutable_userlist(int index);
  ::userinfo::NnUserBet* add_userlist();
  ::google::protobuf::RepeatedPtrField< ::userinfo::NnUserBet >*
      mutable_userlist();
  const ::google::protobuf::RepeatedPtrField< ::userinfo::NnUserBet >&
      userlist() const;

  // @@protoc_insertion_point(class_scope:userinfo.NnUserBetList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::userinfo::NnUserBet > userlist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static NnUserBetList* default_instance_;
};
// -------------------------------------------------------------------

class NnUserBet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.NnUserBet) */ {
 public:
  NnUserBet();
  virtual ~NnUserBet();

  NnUserBet(const NnUserBet& from);

  inline NnUserBet& operator=(const NnUserBet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NnUserBet& default_instance();

  void Swap(NnUserBet* other);

  // implements Message ----------------------------------------------

  inline NnUserBet* New() const { return New(NULL); }

  NnUserBet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NnUserBet& from);
  void MergeFrom(const NnUserBet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NnUserBet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userpos = 1;
  void clear_userpos();
  static const int kUserposFieldNumber = 1;
  ::google::protobuf::uint32 userpos() const;
  void set_userpos(::google::protobuf::uint32 value);

  // optional uint32 times = 2;
  void clear_times();
  static const int kTimesFieldNumber = 2;
  ::google::protobuf::uint32 times() const;
  void set_times(::google::protobuf::uint32 value);

  // optional uint32 betnum = 3;
  void clear_betnum();
  static const int kBetnumFieldNumber = 3;
  ::google::protobuf::uint32 betnum() const;
  void set_betnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:userinfo.NnUserBet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userpos_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 betnum_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static NnUserBet* default_instance_;
};
// -------------------------------------------------------------------

class NnMatchInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.NnMatchInfo) */ {
 public:
  NnMatchInfo();
  virtual ~NnMatchInfo();

  NnMatchInfo(const NnMatchInfo& from);

  inline NnMatchInfo& operator=(const NnMatchInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NnMatchInfo& default_instance();

  void Swap(NnMatchInfo* other);

  // implements Message ----------------------------------------------

  inline NnMatchInfo* New() const { return New(NULL); }

  NnMatchInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NnMatchInfo& from);
  void MergeFrom(const NnMatchInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NnMatchInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // optional uint32 trunindex = 2;
  void clear_trunindex();
  static const int kTrunindexFieldNumber = 2;
  ::google::protobuf::uint32 trunindex() const;
  void set_trunindex(::google::protobuf::uint32 value);

  // optional uint32 curnum = 3;
  void clear_curnum();
  static const int kCurnumFieldNumber = 3;
  ::google::protobuf::uint32 curnum() const;
  void set_curnum(::google::protobuf::uint32 value);

  // optional int32 gamevalue = 4;
  void clear_gamevalue();
  static const int kGamevalueFieldNumber = 4;
  ::google::protobuf::int32 gamevalue() const;
  void set_gamevalue(::google::protobuf::int32 value);

  // optional int32 ifmatch = 5;
  void clear_ifmatch();
  static const int kIfmatchFieldNumber = 5;
  ::google::protobuf::int32 ifmatch() const;
  void set_ifmatch(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:userinfo.NnMatchInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 trunindex_;
  ::google::protobuf::uint32 curnum_;
  ::google::protobuf::int32 gamevalue_;
  ::google::protobuf::int32 ifmatch_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static NnMatchInfo* default_instance_;
};
// -------------------------------------------------------------------

class NnSelfRoomInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userinfo.NnSelfRoomInfo) */ {
 public:
  NnSelfRoomInfo();
  virtual ~NnSelfRoomInfo();

  NnSelfRoomInfo(const NnSelfRoomInfo& from);

  inline NnSelfRoomInfo& operator=(const NnSelfRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NnSelfRoomInfo& default_instance();

  void Swap(NnSelfRoomInfo* other);

  // implements Message ----------------------------------------------

  inline NnSelfRoomInfo* New() const { return New(NULL); }

  NnSelfRoomInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NnSelfRoomInfo& from);
  void MergeFrom(const NnSelfRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NnSelfRoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // optional bytes roomcode = 2;
  void clear_roomcode();
  static const int kRoomcodeFieldNumber = 2;
  const ::std::string& roomcode() const;
  void set_roomcode(const ::std::string& value);
  void set_roomcode(const char* value);
  void set_roomcode(const void* value, size_t size);
  ::std::string* mutable_roomcode();
  ::std::string* release_roomcode();
  void set_allocated_roomcode(::std::string* roomcode);

  // optional uint32 endtime = 3;
  void clear_endtime();
  static const int kEndtimeFieldNumber = 3;
  ::google::protobuf::uint32 endtime() const;
  void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 createuid = 4;
  void clear_createuid();
  static const int kCreateuidFieldNumber = 4;
  ::google::protobuf::uint32 createuid() const;
  void set_createuid(::google::protobuf::uint32 value);

  // optional uint32 basecoin = 5;
  void clear_basecoin();
  static const int kBasecoinFieldNumber = 5;
  ::google::protobuf::uint32 basecoin() const;
  void set_basecoin(::google::protobuf::uint32 value);

  // optional uint32 basetimes = 6;
  void clear_basetimes();
  static const int kBasetimesFieldNumber = 6;
  ::google::protobuf::uint32 basetimes() const;
  void set_basetimes(::google::protobuf::uint32 value);

  // optional uint32 gamenum = 7;
  void clear_gamenum();
  static const int kGamenumFieldNumber = 7;
  ::google::protobuf::uint32 gamenum() const;
  void set_gamenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:userinfo.NnSelfRoomInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr roomcode_;
  ::google::protobuf::uint32 roomid_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 createuid_;
  ::google::protobuf::uint32 basecoin_;
  ::google::protobuf::uint32 basetimes_;
  ::google::protobuf::uint32 gamenum_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static NnSelfRoomInfo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Userinfo

// optional uint32 uid = 1;
inline void Userinfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 Userinfo::uid() const {
  // @@protoc_insertion_point(field_get:userinfo.Userinfo.uid)
  return uid_;
}
inline void Userinfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.Userinfo.uid)
}

// optional bytes uname = 2;
inline void Userinfo::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Userinfo::uname() const {
  // @@protoc_insertion_point(field_get:userinfo.Userinfo.uname)
  return uname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Userinfo::set_uname(const ::std::string& value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userinfo.Userinfo.uname)
}
inline void Userinfo::set_uname(const char* value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userinfo.Userinfo.uname)
}
inline void Userinfo::set_uname(const void* value, size_t size) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userinfo.Userinfo.uname)
}
inline ::std::string* Userinfo::mutable_uname() {
  
  // @@protoc_insertion_point(field_mutable:userinfo.Userinfo.uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Userinfo::release_uname() {
  // @@protoc_insertion_point(field_release:userinfo.Userinfo.uname)
  
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Userinfo::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    
  } else {
    
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:userinfo.Userinfo.uname)
}

// optional uint32 coinnum = 3;
inline void Userinfo::clear_coinnum() {
  coinnum_ = 0u;
}
inline ::google::protobuf::uint32 Userinfo::coinnum() const {
  // @@protoc_insertion_point(field_get:userinfo.Userinfo.coinnum)
  return coinnum_;
}
inline void Userinfo::set_coinnum(::google::protobuf::uint32 value) {
  
  coinnum_ = value;
  // @@protoc_insertion_point(field_set:userinfo.Userinfo.coinnum)
}

// optional uint32 integral = 4;
inline void Userinfo::clear_integral() {
  integral_ = 0u;
}
inline ::google::protobuf::uint32 Userinfo::integral() const {
  // @@protoc_insertion_point(field_get:userinfo.Userinfo.integral)
  return integral_;
}
inline void Userinfo::set_integral(::google::protobuf::uint32 value) {
  
  integral_ = value;
  // @@protoc_insertion_point(field_set:userinfo.Userinfo.integral)
}

// optional uint32 ingotnum = 5;
inline void Userinfo::clear_ingotnum() {
  ingotnum_ = 0u;
}
inline ::google::protobuf::uint32 Userinfo::ingotnum() const {
  // @@protoc_insertion_point(field_get:userinfo.Userinfo.ingotnum)
  return ingotnum_;
}
inline void Userinfo::set_ingotnum(::google::protobuf::uint32 value) {
  
  ingotnum_ = value;
  // @@protoc_insertion_point(field_set:userinfo.Userinfo.ingotnum)
}

// optional uint32 gender = 6;
inline void Userinfo::clear_gender() {
  gender_ = 0u;
}
inline ::google::protobuf::uint32 Userinfo::gender() const {
  // @@protoc_insertion_point(field_get:userinfo.Userinfo.gender)
  return gender_;
}
inline void Userinfo::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:userinfo.Userinfo.gender)
}

// optional bytes headurl = 7;
inline void Userinfo::clear_headurl() {
  headurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Userinfo::headurl() const {
  // @@protoc_insertion_point(field_get:userinfo.Userinfo.headurl)
  return headurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Userinfo::set_headurl(const ::std::string& value) {
  
  headurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userinfo.Userinfo.headurl)
}
inline void Userinfo::set_headurl(const char* value) {
  
  headurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userinfo.Userinfo.headurl)
}
inline void Userinfo::set_headurl(const void* value, size_t size) {
  
  headurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userinfo.Userinfo.headurl)
}
inline ::std::string* Userinfo::mutable_headurl() {
  
  // @@protoc_insertion_point(field_mutable:userinfo.Userinfo.headurl)
  return headurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Userinfo::release_headurl() {
  // @@protoc_insertion_point(field_release:userinfo.Userinfo.headurl)
  
  return headurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Userinfo::set_allocated_headurl(::std::string* headurl) {
  if (headurl != NULL) {
    
  } else {
    
  }
  headurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headurl);
  // @@protoc_insertion_point(field_set_allocated:userinfo.Userinfo.headurl)
}

// optional uint32 nowtime = 8;
inline void Userinfo::clear_nowtime() {
  nowtime_ = 0u;
}
inline ::google::protobuf::uint32 Userinfo::nowtime() const {
  // @@protoc_insertion_point(field_get:userinfo.Userinfo.nowtime)
  return nowtime_;
}
inline void Userinfo::set_nowtime(::google::protobuf::uint32 value) {
  
  nowtime_ = value;
  // @@protoc_insertion_point(field_set:userinfo.Userinfo.nowtime)
}

// -------------------------------------------------------------------

// Card

// optional uint32 value = 1;
inline void Card::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 Card::value() const {
  // @@protoc_insertion_point(field_get:userinfo.Card.value)
  return value_;
}
inline void Card::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:userinfo.Card.value)
}

// -------------------------------------------------------------------

// DeskUserinfo

// optional uint32 uid = 1;
inline void DeskUserinfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 DeskUserinfo::uid() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.uid)
  return uid_;
}
inline void DeskUserinfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.uid)
}

// optional bytes uname = 2;
inline void DeskUserinfo::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeskUserinfo::uname() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.uname)
  return uname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeskUserinfo::set_uname(const ::std::string& value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.uname)
}
inline void DeskUserinfo::set_uname(const char* value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userinfo.DeskUserinfo.uname)
}
inline void DeskUserinfo::set_uname(const void* value, size_t size) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userinfo.DeskUserinfo.uname)
}
inline ::std::string* DeskUserinfo::mutable_uname() {
  
  // @@protoc_insertion_point(field_mutable:userinfo.DeskUserinfo.uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeskUserinfo::release_uname() {
  // @@protoc_insertion_point(field_release:userinfo.DeskUserinfo.uname)
  
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeskUserinfo::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    
  } else {
    
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:userinfo.DeskUserinfo.uname)
}

// optional uint32 coinnum = 3;
inline void DeskUserinfo::clear_coinnum() {
  coinnum_ = 0u;
}
inline ::google::protobuf::uint32 DeskUserinfo::coinnum() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.coinnum)
  return coinnum_;
}
inline void DeskUserinfo::set_coinnum(::google::protobuf::uint32 value) {
  
  coinnum_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.coinnum)
}

// optional bytes headurl = 4;
inline void DeskUserinfo::clear_headurl() {
  headurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeskUserinfo::headurl() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.headurl)
  return headurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeskUserinfo::set_headurl(const ::std::string& value) {
  
  headurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.headurl)
}
inline void DeskUserinfo::set_headurl(const char* value) {
  
  headurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userinfo.DeskUserinfo.headurl)
}
inline void DeskUserinfo::set_headurl(const void* value, size_t size) {
  
  headurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userinfo.DeskUserinfo.headurl)
}
inline ::std::string* DeskUserinfo::mutable_headurl() {
  
  // @@protoc_insertion_point(field_mutable:userinfo.DeskUserinfo.headurl)
  return headurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeskUserinfo::release_headurl() {
  // @@protoc_insertion_point(field_release:userinfo.DeskUserinfo.headurl)
  
  return headurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeskUserinfo::set_allocated_headurl(::std::string* headurl) {
  if (headurl != NULL) {
    
  } else {
    
  }
  headurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headurl);
  // @@protoc_insertion_point(field_set_allocated:userinfo.DeskUserinfo.headurl)
}

// optional uint32 deskid = 5;
inline void DeskUserinfo::clear_deskid() {
  deskid_ = 0u;
}
inline ::google::protobuf::uint32 DeskUserinfo::deskid() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.deskid)
  return deskid_;
}
inline void DeskUserinfo::set_deskid(::google::protobuf::uint32 value) {
  
  deskid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.deskid)
}

// optional uint32 pos = 6;
inline void DeskUserinfo::clear_pos() {
  pos_ = 0u;
}
inline ::google::protobuf::uint32 DeskUserinfo::pos() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.pos)
  return pos_;
}
inline void DeskUserinfo::set_pos(::google::protobuf::uint32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.pos)
}

// optional uint32 status = 7;
inline void DeskUserinfo::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 DeskUserinfo::status() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.status)
  return status_;
}
inline void DeskUserinfo::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.status)
}

// optional uint32 offline = 8;
inline void DeskUserinfo::clear_offline() {
  offline_ = 0u;
}
inline ::google::protobuf::uint32 DeskUserinfo::offline() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.offline)
  return offline_;
}
inline void DeskUserinfo::set_offline(::google::protobuf::uint32 value) {
  
  offline_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.offline)
}

// optional uint32 ifauto = 9;
inline void DeskUserinfo::clear_ifauto() {
  ifauto_ = 0u;
}
inline ::google::protobuf::uint32 DeskUserinfo::ifauto() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.ifauto)
  return ifauto_;
}
inline void DeskUserinfo::set_ifauto(::google::protobuf::uint32 value) {
  
  ifauto_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.ifauto)
}

// optional uint32 ifdouble = 10;
inline void DeskUserinfo::clear_ifdouble() {
  ifdouble_ = 0u;
}
inline ::google::protobuf::uint32 DeskUserinfo::ifdouble() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.ifdouble)
  return ifdouble_;
}
inline void DeskUserinfo::set_ifdouble(::google::protobuf::uint32 value) {
  
  ifdouble_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.ifdouble)
}

// optional uint32 ifshowcard = 11;
inline void DeskUserinfo::clear_ifshowcard() {
  ifshowcard_ = 0u;
}
inline ::google::protobuf::uint32 DeskUserinfo::ifshowcard() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.ifshowcard)
  return ifshowcard_;
}
inline void DeskUserinfo::set_ifshowcard(::google::protobuf::uint32 value) {
  
  ifshowcard_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.ifshowcard)
}

// repeated .userinfo.Card poker = 12;
inline int DeskUserinfo::poker_size() const {
  return poker_.size();
}
inline void DeskUserinfo::clear_poker() {
  poker_.Clear();
}
inline const ::userinfo::Card& DeskUserinfo::poker(int index) const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.poker)
  return poker_.Get(index);
}
inline ::userinfo::Card* DeskUserinfo::mutable_poker(int index) {
  // @@protoc_insertion_point(field_mutable:userinfo.DeskUserinfo.poker)
  return poker_.Mutable(index);
}
inline ::userinfo::Card* DeskUserinfo::add_poker() {
  // @@protoc_insertion_point(field_add:userinfo.DeskUserinfo.poker)
  return poker_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userinfo::Card >*
DeskUserinfo::mutable_poker() {
  // @@protoc_insertion_point(field_mutable_list:userinfo.DeskUserinfo.poker)
  return &poker_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userinfo::Card >&
DeskUserinfo::poker() const {
  // @@protoc_insertion_point(field_list:userinfo.DeskUserinfo.poker)
  return poker_;
}

// optional uint32 gender = 13;
inline void DeskUserinfo::clear_gender() {
  gender_ = 0u;
}
inline ::google::protobuf::uint32 DeskUserinfo::gender() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.gender)
  return gender_;
}
inline void DeskUserinfo::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.gender)
}

// optional uint32 integral = 14;
inline void DeskUserinfo::clear_integral() {
  integral_ = 0u;
}
inline ::google::protobuf::uint32 DeskUserinfo::integral() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.integral)
  return integral_;
}
inline void DeskUserinfo::set_integral(::google::protobuf::uint32 value) {
  
  integral_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.integral)
}

// optional int32 gamevalue = 15;
inline void DeskUserinfo::clear_gamevalue() {
  gamevalue_ = 0;
}
inline ::google::protobuf::int32 DeskUserinfo::gamevalue() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.gamevalue)
  return gamevalue_;
}
inline void DeskUserinfo::set_gamevalue(::google::protobuf::int32 value) {
  
  gamevalue_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.gamevalue)
}

// optional uint32 pokerlen = 16;
inline void DeskUserinfo::clear_pokerlen() {
  pokerlen_ = 0u;
}
inline ::google::protobuf::uint32 DeskUserinfo::pokerlen() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskUserinfo.pokerlen)
  return pokerlen_;
}
inline void DeskUserinfo::set_pokerlen(::google::protobuf::uint32 value) {
  
  pokerlen_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskUserinfo.pokerlen)
}

// -------------------------------------------------------------------

// DdzDeskinfo

// optional uint32 deskid = 1;
inline void DdzDeskinfo::clear_deskid() {
  deskid_ = 0u;
}
inline ::google::protobuf::uint32 DdzDeskinfo::deskid() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskinfo.deskid)
  return deskid_;
}
inline void DdzDeskinfo::set_deskid(::google::protobuf::uint32 value) {
  
  deskid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzDeskinfo.deskid)
}

// optional uint32 status = 2;
inline void DdzDeskinfo::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 DdzDeskinfo::status() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskinfo.status)
  return status_;
}
inline void DdzDeskinfo::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzDeskinfo.status)
}

// optional uint32 curpos = 3;
inline void DdzDeskinfo::clear_curpos() {
  curpos_ = 0u;
}
inline ::google::protobuf::uint32 DdzDeskinfo::curpos() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskinfo.curpos)
  return curpos_;
}
inline void DdzDeskinfo::set_curpos(::google::protobuf::uint32 value) {
  
  curpos_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzDeskinfo.curpos)
}

// optional uint32 point = 4;
inline void DdzDeskinfo::clear_point() {
  point_ = 0u;
}
inline ::google::protobuf::uint32 DdzDeskinfo::point() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskinfo.point)
  return point_;
}
inline void DdzDeskinfo::set_point(::google::protobuf::uint32 value) {
  
  point_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzDeskinfo.point)
}

// optional uint32 bombnum = 5;
inline void DdzDeskinfo::clear_bombnum() {
  bombnum_ = 0u;
}
inline ::google::protobuf::uint32 DdzDeskinfo::bombnum() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskinfo.bombnum)
  return bombnum_;
}
inline void DdzDeskinfo::set_bombnum(::google::protobuf::uint32 value) {
  
  bombnum_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzDeskinfo.bombnum)
}

// repeated .userinfo.Card lastpoker = 6;
inline int DdzDeskinfo::lastpoker_size() const {
  return lastpoker_.size();
}
inline void DdzDeskinfo::clear_lastpoker() {
  lastpoker_.Clear();
}
inline const ::userinfo::Card& DdzDeskinfo::lastpoker(int index) const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskinfo.lastpoker)
  return lastpoker_.Get(index);
}
inline ::userinfo::Card* DdzDeskinfo::mutable_lastpoker(int index) {
  // @@protoc_insertion_point(field_mutable:userinfo.DdzDeskinfo.lastpoker)
  return lastpoker_.Mutable(index);
}
inline ::userinfo::Card* DdzDeskinfo::add_lastpoker() {
  // @@protoc_insertion_point(field_add:userinfo.DdzDeskinfo.lastpoker)
  return lastpoker_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userinfo::Card >*
DdzDeskinfo::mutable_lastpoker() {
  // @@protoc_insertion_point(field_mutable_list:userinfo.DdzDeskinfo.lastpoker)
  return &lastpoker_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userinfo::Card >&
DdzDeskinfo::lastpoker() const {
  // @@protoc_insertion_point(field_list:userinfo.DdzDeskinfo.lastpoker)
  return lastpoker_;
}

// repeated .userinfo.Card putpoker = 7;
inline int DdzDeskinfo::putpoker_size() const {
  return putpoker_.size();
}
inline void DdzDeskinfo::clear_putpoker() {
  putpoker_.Clear();
}
inline const ::userinfo::Card& DdzDeskinfo::putpoker(int index) const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskinfo.putpoker)
  return putpoker_.Get(index);
}
inline ::userinfo::Card* DdzDeskinfo::mutable_putpoker(int index) {
  // @@protoc_insertion_point(field_mutable:userinfo.DdzDeskinfo.putpoker)
  return putpoker_.Mutable(index);
}
inline ::userinfo::Card* DdzDeskinfo::add_putpoker() {
  // @@protoc_insertion_point(field_add:userinfo.DdzDeskinfo.putpoker)
  return putpoker_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userinfo::Card >*
DdzDeskinfo::mutable_putpoker() {
  // @@protoc_insertion_point(field_mutable_list:userinfo.DdzDeskinfo.putpoker)
  return &putpoker_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userinfo::Card >&
DdzDeskinfo::putpoker() const {
  // @@protoc_insertion_point(field_list:userinfo.DdzDeskinfo.putpoker)
  return putpoker_;
}

// repeated .userinfo.DeskUserinfo userlist = 8;
inline int DdzDeskinfo::userlist_size() const {
  return userlist_.size();
}
inline void DdzDeskinfo::clear_userlist() {
  userlist_.Clear();
}
inline const ::userinfo::DeskUserinfo& DdzDeskinfo::userlist(int index) const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskinfo.userlist)
  return userlist_.Get(index);
}
inline ::userinfo::DeskUserinfo* DdzDeskinfo::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:userinfo.DdzDeskinfo.userlist)
  return userlist_.Mutable(index);
}
inline ::userinfo::DeskUserinfo* DdzDeskinfo::add_userlist() {
  // @@protoc_insertion_point(field_add:userinfo.DdzDeskinfo.userlist)
  return userlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userinfo::DeskUserinfo >*
DdzDeskinfo::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:userinfo.DdzDeskinfo.userlist)
  return &userlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userinfo::DeskUserinfo >&
DdzDeskinfo::userlist() const {
  // @@protoc_insertion_point(field_list:userinfo.DdzDeskinfo.userlist)
  return userlist_;
}

// repeated .userinfo.Card pubpoker = 9;
inline int DdzDeskinfo::pubpoker_size() const {
  return pubpoker_.size();
}
inline void DdzDeskinfo::clear_pubpoker() {
  pubpoker_.Clear();
}
inline const ::userinfo::Card& DdzDeskinfo::pubpoker(int index) const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskinfo.pubpoker)
  return pubpoker_.Get(index);
}
inline ::userinfo::Card* DdzDeskinfo::mutable_pubpoker(int index) {
  // @@protoc_insertion_point(field_mutable:userinfo.DdzDeskinfo.pubpoker)
  return pubpoker_.Mutable(index);
}
inline ::userinfo::Card* DdzDeskinfo::add_pubpoker() {
  // @@protoc_insertion_point(field_add:userinfo.DdzDeskinfo.pubpoker)
  return pubpoker_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userinfo::Card >*
DdzDeskinfo::mutable_pubpoker() {
  // @@protoc_insertion_point(field_mutable_list:userinfo.DdzDeskinfo.pubpoker)
  return &pubpoker_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userinfo::Card >&
DdzDeskinfo::pubpoker() const {
  // @@protoc_insertion_point(field_list:userinfo.DdzDeskinfo.pubpoker)
  return pubpoker_;
}

// optional uint32 matchid = 10;
inline void DdzDeskinfo::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 DdzDeskinfo::matchid() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskinfo.matchid)
  return matchid_;
}
inline void DdzDeskinfo::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzDeskinfo.matchid)
}

// -------------------------------------------------------------------

// DdzDeskResultinfo

// optional uint32 status = 1;
inline void DdzDeskResultinfo::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 DdzDeskResultinfo::status() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskResultinfo.status)
  return status_;
}
inline void DdzDeskResultinfo::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzDeskResultinfo.status)
}

// optional uint32 point = 2;
inline void DdzDeskResultinfo::clear_point() {
  point_ = 0u;
}
inline ::google::protobuf::uint32 DdzDeskResultinfo::point() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskResultinfo.point)
  return point_;
}
inline void DdzDeskResultinfo::set_point(::google::protobuf::uint32 value) {
  
  point_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzDeskResultinfo.point)
}

// optional uint32 bombnum = 3;
inline void DdzDeskResultinfo::clear_bombnum() {
  bombnum_ = 0u;
}
inline ::google::protobuf::uint32 DdzDeskResultinfo::bombnum() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskResultinfo.bombnum)
  return bombnum_;
}
inline void DdzDeskResultinfo::set_bombnum(::google::protobuf::uint32 value) {
  
  bombnum_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzDeskResultinfo.bombnum)
}

// optional uint32 ifspring = 4;
inline void DdzDeskResultinfo::clear_ifspring() {
  ifspring_ = 0u;
}
inline ::google::protobuf::uint32 DdzDeskResultinfo::ifspring() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskResultinfo.ifspring)
  return ifspring_;
}
inline void DdzDeskResultinfo::set_ifspring(::google::protobuf::uint32 value) {
  
  ifspring_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzDeskResultinfo.ifspring)
}

// repeated .userinfo.DdzUserResultinfo userlist = 5;
inline int DdzDeskResultinfo::userlist_size() const {
  return userlist_.size();
}
inline void DdzDeskResultinfo::clear_userlist() {
  userlist_.Clear();
}
inline const ::userinfo::DdzUserResultinfo& DdzDeskResultinfo::userlist(int index) const {
  // @@protoc_insertion_point(field_get:userinfo.DdzDeskResultinfo.userlist)
  return userlist_.Get(index);
}
inline ::userinfo::DdzUserResultinfo* DdzDeskResultinfo::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:userinfo.DdzDeskResultinfo.userlist)
  return userlist_.Mutable(index);
}
inline ::userinfo::DdzUserResultinfo* DdzDeskResultinfo::add_userlist() {
  // @@protoc_insertion_point(field_add:userinfo.DdzDeskResultinfo.userlist)
  return userlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userinfo::DdzUserResultinfo >*
DdzDeskResultinfo::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:userinfo.DdzDeskResultinfo.userlist)
  return &userlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userinfo::DdzUserResultinfo >&
DdzDeskResultinfo::userlist() const {
  // @@protoc_insertion_point(field_list:userinfo.DdzDeskResultinfo.userlist)
  return userlist_;
}

// -------------------------------------------------------------------

// DdzUserResultinfo

// optional uint32 uid = 1;
inline void DdzUserResultinfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 DdzUserResultinfo::uid() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzUserResultinfo.uid)
  return uid_;
}
inline void DdzUserResultinfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzUserResultinfo.uid)
}

// optional uint32 pos = 2;
inline void DdzUserResultinfo::clear_pos() {
  pos_ = 0u;
}
inline ::google::protobuf::uint32 DdzUserResultinfo::pos() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzUserResultinfo.pos)
  return pos_;
}
inline void DdzUserResultinfo::set_pos(::google::protobuf::uint32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzUserResultinfo.pos)
}

// optional uint32 point = 3;
inline void DdzUserResultinfo::clear_point() {
  point_ = 0u;
}
inline ::google::protobuf::uint32 DdzUserResultinfo::point() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzUserResultinfo.point)
  return point_;
}
inline void DdzUserResultinfo::set_point(::google::protobuf::uint32 value) {
  
  point_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzUserResultinfo.point)
}

// optional uint32 result = 4;
inline void DdzUserResultinfo::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 DdzUserResultinfo::result() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzUserResultinfo.result)
  return result_;
}
inline void DdzUserResultinfo::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzUserResultinfo.result)
}

// optional uint32 value = 5;
inline void DdzUserResultinfo::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 DdzUserResultinfo::value() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzUserResultinfo.value)
  return value_;
}
inline void DdzUserResultinfo::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzUserResultinfo.value)
}

// optional uint32 coin = 6;
inline void DdzUserResultinfo::clear_coin() {
  coin_ = 0u;
}
inline ::google::protobuf::uint32 DdzUserResultinfo::coin() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzUserResultinfo.coin)
  return coin_;
}
inline void DdzUserResultinfo::set_coin(::google::protobuf::uint32 value) {
  
  coin_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzUserResultinfo.coin)
}

// optional int32 gamevalue = 7;
inline void DdzUserResultinfo::clear_gamevalue() {
  gamevalue_ = 0;
}
inline ::google::protobuf::int32 DdzUserResultinfo::gamevalue() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzUserResultinfo.gamevalue)
  return gamevalue_;
}
inline void DdzUserResultinfo::set_gamevalue(::google::protobuf::int32 value) {
  
  gamevalue_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzUserResultinfo.gamevalue)
}

// optional uint32 rank = 8;
inline void DdzUserResultinfo::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 DdzUserResultinfo::rank() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzUserResultinfo.rank)
  return rank_;
}
inline void DdzUserResultinfo::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzUserResultinfo.rank)
}

// optional uint32 leftvalue = 9;
inline void DdzUserResultinfo::clear_leftvalue() {
  leftvalue_ = 0u;
}
inline ::google::protobuf::uint32 DdzUserResultinfo::leftvalue() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzUserResultinfo.leftvalue)
  return leftvalue_;
}
inline void DdzUserResultinfo::set_leftvalue(::google::protobuf::uint32 value) {
  
  leftvalue_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzUserResultinfo.leftvalue)
}

// -------------------------------------------------------------------

// DdzMatchInfo

// optional uint32 matchid = 1;
inline void DdzMatchInfo::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 DdzMatchInfo::matchid() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzMatchInfo.matchid)
  return matchid_;
}
inline void DdzMatchInfo::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzMatchInfo.matchid)
}

// optional uint32 trunindex = 2;
inline void DdzMatchInfo::clear_trunindex() {
  trunindex_ = 0u;
}
inline ::google::protobuf::uint32 DdzMatchInfo::trunindex() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzMatchInfo.trunindex)
  return trunindex_;
}
inline void DdzMatchInfo::set_trunindex(::google::protobuf::uint32 value) {
  
  trunindex_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzMatchInfo.trunindex)
}

// optional uint32 curnum = 3;
inline void DdzMatchInfo::clear_curnum() {
  curnum_ = 0u;
}
inline ::google::protobuf::uint32 DdzMatchInfo::curnum() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzMatchInfo.curnum)
  return curnum_;
}
inline void DdzMatchInfo::set_curnum(::google::protobuf::uint32 value) {
  
  curnum_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzMatchInfo.curnum)
}

// optional int32 gamevalue = 4;
inline void DdzMatchInfo::clear_gamevalue() {
  gamevalue_ = 0;
}
inline ::google::protobuf::int32 DdzMatchInfo::gamevalue() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzMatchInfo.gamevalue)
  return gamevalue_;
}
inline void DdzMatchInfo::set_gamevalue(::google::protobuf::int32 value) {
  
  gamevalue_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzMatchInfo.gamevalue)
}

// optional int32 ifmatch = 5;
inline void DdzMatchInfo::clear_ifmatch() {
  ifmatch_ = 0;
}
inline ::google::protobuf::int32 DdzMatchInfo::ifmatch() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzMatchInfo.ifmatch)
  return ifmatch_;
}
inline void DdzMatchInfo::set_ifmatch(::google::protobuf::int32 value) {
  
  ifmatch_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzMatchInfo.ifmatch)
}

// -------------------------------------------------------------------

// DdzSelfRoomInfo

// optional uint32 roomid = 1;
inline void DdzSelfRoomInfo::clear_roomid() {
  roomid_ = 0u;
}
inline ::google::protobuf::uint32 DdzSelfRoomInfo::roomid() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzSelfRoomInfo.roomid)
  return roomid_;
}
inline void DdzSelfRoomInfo::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzSelfRoomInfo.roomid)
}

// optional bytes roomcode = 2;
inline void DdzSelfRoomInfo::clear_roomcode() {
  roomcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DdzSelfRoomInfo::roomcode() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzSelfRoomInfo.roomcode)
  return roomcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DdzSelfRoomInfo::set_roomcode(const ::std::string& value) {
  
  roomcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userinfo.DdzSelfRoomInfo.roomcode)
}
inline void DdzSelfRoomInfo::set_roomcode(const char* value) {
  
  roomcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userinfo.DdzSelfRoomInfo.roomcode)
}
inline void DdzSelfRoomInfo::set_roomcode(const void* value, size_t size) {
  
  roomcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userinfo.DdzSelfRoomInfo.roomcode)
}
inline ::std::string* DdzSelfRoomInfo::mutable_roomcode() {
  
  // @@protoc_insertion_point(field_mutable:userinfo.DdzSelfRoomInfo.roomcode)
  return roomcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DdzSelfRoomInfo::release_roomcode() {
  // @@protoc_insertion_point(field_release:userinfo.DdzSelfRoomInfo.roomcode)
  
  return roomcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DdzSelfRoomInfo::set_allocated_roomcode(::std::string* roomcode) {
  if (roomcode != NULL) {
    
  } else {
    
  }
  roomcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomcode);
  // @@protoc_insertion_point(field_set_allocated:userinfo.DdzSelfRoomInfo.roomcode)
}

// optional uint32 endtime = 3;
inline void DdzSelfRoomInfo::clear_endtime() {
  endtime_ = 0u;
}
inline ::google::protobuf::uint32 DdzSelfRoomInfo::endtime() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzSelfRoomInfo.endtime)
  return endtime_;
}
inline void DdzSelfRoomInfo::set_endtime(::google::protobuf::uint32 value) {
  
  endtime_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzSelfRoomInfo.endtime)
}

// optional uint32 createuid = 4;
inline void DdzSelfRoomInfo::clear_createuid() {
  createuid_ = 0u;
}
inline ::google::protobuf::uint32 DdzSelfRoomInfo::createuid() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzSelfRoomInfo.createuid)
  return createuid_;
}
inline void DdzSelfRoomInfo::set_createuid(::google::protobuf::uint32 value) {
  
  createuid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzSelfRoomInfo.createuid)
}

// optional uint32 basecoin = 5;
inline void DdzSelfRoomInfo::clear_basecoin() {
  basecoin_ = 0u;
}
inline ::google::protobuf::uint32 DdzSelfRoomInfo::basecoin() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzSelfRoomInfo.basecoin)
  return basecoin_;
}
inline void DdzSelfRoomInfo::set_basecoin(::google::protobuf::uint32 value) {
  
  basecoin_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzSelfRoomInfo.basecoin)
}

// optional uint32 basetimes = 6;
inline void DdzSelfRoomInfo::clear_basetimes() {
  basetimes_ = 0u;
}
inline ::google::protobuf::uint32 DdzSelfRoomInfo::basetimes() const {
  // @@protoc_insertion_point(field_get:userinfo.DdzSelfRoomInfo.basetimes)
  return basetimes_;
}
inline void DdzSelfRoomInfo::set_basetimes(::google::protobuf::uint32 value) {
  
  basetimes_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DdzSelfRoomInfo.basetimes)
}

// -------------------------------------------------------------------

// DeskNnUserinfo

// optional uint32 uid = 1;
inline void DeskNnUserinfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 DeskNnUserinfo::uid() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.uid)
  return uid_;
}
inline void DeskNnUserinfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskNnUserinfo.uid)
}

// optional bytes uname = 2;
inline void DeskNnUserinfo::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeskNnUserinfo::uname() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.uname)
  return uname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeskNnUserinfo::set_uname(const ::std::string& value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userinfo.DeskNnUserinfo.uname)
}
inline void DeskNnUserinfo::set_uname(const char* value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userinfo.DeskNnUserinfo.uname)
}
inline void DeskNnUserinfo::set_uname(const void* value, size_t size) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userinfo.DeskNnUserinfo.uname)
}
inline ::std::string* DeskNnUserinfo::mutable_uname() {
  
  // @@protoc_insertion_point(field_mutable:userinfo.DeskNnUserinfo.uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeskNnUserinfo::release_uname() {
  // @@protoc_insertion_point(field_release:userinfo.DeskNnUserinfo.uname)
  
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeskNnUserinfo::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    
  } else {
    
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:userinfo.DeskNnUserinfo.uname)
}

// optional uint32 coinnum = 3;
inline void DeskNnUserinfo::clear_coinnum() {
  coinnum_ = 0u;
}
inline ::google::protobuf::uint32 DeskNnUserinfo::coinnum() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.coinnum)
  return coinnum_;
}
inline void DeskNnUserinfo::set_coinnum(::google::protobuf::uint32 value) {
  
  coinnum_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskNnUserinfo.coinnum)
}

// optional bytes headurl = 4;
inline void DeskNnUserinfo::clear_headurl() {
  headurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeskNnUserinfo::headurl() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.headurl)
  return headurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeskNnUserinfo::set_headurl(const ::std::string& value) {
  
  headurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userinfo.DeskNnUserinfo.headurl)
}
inline void DeskNnUserinfo::set_headurl(const char* value) {
  
  headurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userinfo.DeskNnUserinfo.headurl)
}
inline void DeskNnUserinfo::set_headurl(const void* value, size_t size) {
  
  headurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userinfo.DeskNnUserinfo.headurl)
}
inline ::std::string* DeskNnUserinfo::mutable_headurl() {
  
  // @@protoc_insertion_point(field_mutable:userinfo.DeskNnUserinfo.headurl)
  return headurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeskNnUserinfo::release_headurl() {
  // @@protoc_insertion_point(field_release:userinfo.DeskNnUserinfo.headurl)
  
  return headurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeskNnUserinfo::set_allocated_headurl(::std::string* headurl) {
  if (headurl != NULL) {
    
  } else {
    
  }
  headurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headurl);
  // @@protoc_insertion_point(field_set_allocated:userinfo.DeskNnUserinfo.headurl)
}

// optional uint32 deskid = 5;
inline void DeskNnUserinfo::clear_deskid() {
  deskid_ = 0u;
}
inline ::google::protobuf::uint32 DeskNnUserinfo::deskid() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.deskid)
  return deskid_;
}
inline void DeskNnUserinfo::set_deskid(::google::protobuf::uint32 value) {
  
  deskid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskNnUserinfo.deskid)
}

// optional uint32 pos = 6;
inline void DeskNnUserinfo::clear_pos() {
  pos_ = 0u;
}
inline ::google::protobuf::uint32 DeskNnUserinfo::pos() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.pos)
  return pos_;
}
inline void DeskNnUserinfo::set_pos(::google::protobuf::uint32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskNnUserinfo.pos)
}

// optional uint32 status = 7;
inline void DeskNnUserinfo::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 DeskNnUserinfo::status() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.status)
  return status_;
}
inline void DeskNnUserinfo::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskNnUserinfo.status)
}

// optional uint32 offline = 8;
inline void DeskNnUserinfo::clear_offline() {
  offline_ = 0u;
}
inline ::google::protobuf::uint32 DeskNnUserinfo::offline() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.offline)
  return offline_;
}
inline void DeskNnUserinfo::set_offline(::google::protobuf::uint32 value) {
  
  offline_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskNnUserinfo.offline)
}

// repeated .userinfo.Card poker = 9;
inline int DeskNnUserinfo::poker_size() const {
  return poker_.size();
}
inline void DeskNnUserinfo::clear_poker() {
  poker_.Clear();
}
inline const ::userinfo::Card& DeskNnUserinfo::poker(int index) const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.poker)
  return poker_.Get(index);
}
inline ::userinfo::Card* DeskNnUserinfo::mutable_poker(int index) {
  // @@protoc_insertion_point(field_mutable:userinfo.DeskNnUserinfo.poker)
  return poker_.Mutable(index);
}
inline ::userinfo::Card* DeskNnUserinfo::add_poker() {
  // @@protoc_insertion_point(field_add:userinfo.DeskNnUserinfo.poker)
  return poker_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userinfo::Card >*
DeskNnUserinfo::mutable_poker() {
  // @@protoc_insertion_point(field_mutable_list:userinfo.DeskNnUserinfo.poker)
  return &poker_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userinfo::Card >&
DeskNnUserinfo::poker() const {
  // @@protoc_insertion_point(field_list:userinfo.DeskNnUserinfo.poker)
  return poker_;
}

// optional uint32 gender = 10;
inline void DeskNnUserinfo::clear_gender() {
  gender_ = 0u;
}
inline ::google::protobuf::uint32 DeskNnUserinfo::gender() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.gender)
  return gender_;
}
inline void DeskNnUserinfo::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskNnUserinfo.gender)
}

// optional uint32 integral = 11;
inline void DeskNnUserinfo::clear_integral() {
  integral_ = 0u;
}
inline ::google::protobuf::uint32 DeskNnUserinfo::integral() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.integral)
  return integral_;
}
inline void DeskNnUserinfo::set_integral(::google::protobuf::uint32 value) {
  
  integral_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskNnUserinfo.integral)
}

// optional uint32 gamevalue = 12;
inline void DeskNnUserinfo::clear_gamevalue() {
  gamevalue_ = 0u;
}
inline ::google::protobuf::uint32 DeskNnUserinfo::gamevalue() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.gamevalue)
  return gamevalue_;
}
inline void DeskNnUserinfo::set_gamevalue(::google::protobuf::uint32 value) {
  
  gamevalue_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskNnUserinfo.gamevalue)
}

// optional uint32 times = 13;
inline void DeskNnUserinfo::clear_times() {
  times_ = 0u;
}
inline ::google::protobuf::uint32 DeskNnUserinfo::times() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.times)
  return times_;
}
inline void DeskNnUserinfo::set_times(::google::protobuf::uint32 value) {
  
  times_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskNnUserinfo.times)
}

// optional uint32 betnum = 14;
inline void DeskNnUserinfo::clear_betnum() {
  betnum_ = 0u;
}
inline ::google::protobuf::uint32 DeskNnUserinfo::betnum() const {
  // @@protoc_insertion_point(field_get:userinfo.DeskNnUserinfo.betnum)
  return betnum_;
}
inline void DeskNnUserinfo::set_betnum(::google::protobuf::uint32 value) {
  
  betnum_ = value;
  // @@protoc_insertion_point(field_set:userinfo.DeskNnUserinfo.betnum)
}

// -------------------------------------------------------------------

// NnDeskinfo

// optional uint32 deskid = 1;
inline void NnDeskinfo::clear_deskid() {
  deskid_ = 0u;
}
inline ::google::protobuf::uint32 NnDeskinfo::deskid() const {
  // @@protoc_insertion_point(field_get:userinfo.NnDeskinfo.deskid)
  return deskid_;
}
inline void NnDeskinfo::set_deskid(::google::protobuf::uint32 value) {
  
  deskid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnDeskinfo.deskid)
}

// optional uint32 status = 2;
inline void NnDeskinfo::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 NnDeskinfo::status() const {
  // @@protoc_insertion_point(field_get:userinfo.NnDeskinfo.status)
  return status_;
}
inline void NnDeskinfo::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnDeskinfo.status)
}

// optional uint32 hostpos = 3;
inline void NnDeskinfo::clear_hostpos() {
  hostpos_ = 0u;
}
inline ::google::protobuf::uint32 NnDeskinfo::hostpos() const {
  // @@protoc_insertion_point(field_get:userinfo.NnDeskinfo.hostpos)
  return hostpos_;
}
inline void NnDeskinfo::set_hostpos(::google::protobuf::uint32 value) {
  
  hostpos_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnDeskinfo.hostpos)
}

// optional uint32 times = 4;
inline void NnDeskinfo::clear_times() {
  times_ = 0u;
}
inline ::google::protobuf::uint32 NnDeskinfo::times() const {
  // @@protoc_insertion_point(field_get:userinfo.NnDeskinfo.times)
  return times_;
}
inline void NnDeskinfo::set_times(::google::protobuf::uint32 value) {
  
  times_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnDeskinfo.times)
}

// repeated .userinfo.DeskNnUserinfo userlist = 5;
inline int NnDeskinfo::userlist_size() const {
  return userlist_.size();
}
inline void NnDeskinfo::clear_userlist() {
  userlist_.Clear();
}
inline const ::userinfo::DeskNnUserinfo& NnDeskinfo::userlist(int index) const {
  // @@protoc_insertion_point(field_get:userinfo.NnDeskinfo.userlist)
  return userlist_.Get(index);
}
inline ::userinfo::DeskNnUserinfo* NnDeskinfo::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:userinfo.NnDeskinfo.userlist)
  return userlist_.Mutable(index);
}
inline ::userinfo::DeskNnUserinfo* NnDeskinfo::add_userlist() {
  // @@protoc_insertion_point(field_add:userinfo.NnDeskinfo.userlist)
  return userlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userinfo::DeskNnUserinfo >*
NnDeskinfo::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:userinfo.NnDeskinfo.userlist)
  return &userlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userinfo::DeskNnUserinfo >&
NnDeskinfo::userlist() const {
  // @@protoc_insertion_point(field_list:userinfo.NnDeskinfo.userlist)
  return userlist_;
}

// optional uint32 matchid = 6;
inline void NnDeskinfo::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 NnDeskinfo::matchid() const {
  // @@protoc_insertion_point(field_get:userinfo.NnDeskinfo.matchid)
  return matchid_;
}
inline void NnDeskinfo::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnDeskinfo.matchid)
}

// -------------------------------------------------------------------

// NnUserPokerList

// repeated .userinfo.NnUserPoker userlist = 1;
inline int NnUserPokerList::userlist_size() const {
  return userlist_.size();
}
inline void NnUserPokerList::clear_userlist() {
  userlist_.Clear();
}
inline const ::userinfo::NnUserPoker& NnUserPokerList::userlist(int index) const {
  // @@protoc_insertion_point(field_get:userinfo.NnUserPokerList.userlist)
  return userlist_.Get(index);
}
inline ::userinfo::NnUserPoker* NnUserPokerList::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:userinfo.NnUserPokerList.userlist)
  return userlist_.Mutable(index);
}
inline ::userinfo::NnUserPoker* NnUserPokerList::add_userlist() {
  // @@protoc_insertion_point(field_add:userinfo.NnUserPokerList.userlist)
  return userlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userinfo::NnUserPoker >*
NnUserPokerList::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:userinfo.NnUserPokerList.userlist)
  return &userlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userinfo::NnUserPoker >&
NnUserPokerList::userlist() const {
  // @@protoc_insertion_point(field_list:userinfo.NnUserPokerList.userlist)
  return userlist_;
}

// -------------------------------------------------------------------

// NnUserPoker

// optional uint32 userpos = 1;
inline void NnUserPoker::clear_userpos() {
  userpos_ = 0u;
}
inline ::google::protobuf::uint32 NnUserPoker::userpos() const {
  // @@protoc_insertion_point(field_get:userinfo.NnUserPoker.userpos)
  return userpos_;
}
inline void NnUserPoker::set_userpos(::google::protobuf::uint32 value) {
  
  userpos_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnUserPoker.userpos)
}

// repeated .userinfo.Card pokerlist = 2;
inline int NnUserPoker::pokerlist_size() const {
  return pokerlist_.size();
}
inline void NnUserPoker::clear_pokerlist() {
  pokerlist_.Clear();
}
inline const ::userinfo::Card& NnUserPoker::pokerlist(int index) const {
  // @@protoc_insertion_point(field_get:userinfo.NnUserPoker.pokerlist)
  return pokerlist_.Get(index);
}
inline ::userinfo::Card* NnUserPoker::mutable_pokerlist(int index) {
  // @@protoc_insertion_point(field_mutable:userinfo.NnUserPoker.pokerlist)
  return pokerlist_.Mutable(index);
}
inline ::userinfo::Card* NnUserPoker::add_pokerlist() {
  // @@protoc_insertion_point(field_add:userinfo.NnUserPoker.pokerlist)
  return pokerlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userinfo::Card >*
NnUserPoker::mutable_pokerlist() {
  // @@protoc_insertion_point(field_mutable_list:userinfo.NnUserPoker.pokerlist)
  return &pokerlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userinfo::Card >&
NnUserPoker::pokerlist() const {
  // @@protoc_insertion_point(field_list:userinfo.NnUserPoker.pokerlist)
  return pokerlist_;
}

// -------------------------------------------------------------------

// NNDeskResultinfo

// optional uint32 status = 1;
inline void NNDeskResultinfo::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 NNDeskResultinfo::status() const {
  // @@protoc_insertion_point(field_get:userinfo.NNDeskResultinfo.status)
  return status_;
}
inline void NNDeskResultinfo::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NNDeskResultinfo.status)
}

// optional uint32 times = 2;
inline void NNDeskResultinfo::clear_times() {
  times_ = 0u;
}
inline ::google::protobuf::uint32 NNDeskResultinfo::times() const {
  // @@protoc_insertion_point(field_get:userinfo.NNDeskResultinfo.times)
  return times_;
}
inline void NNDeskResultinfo::set_times(::google::protobuf::uint32 value) {
  
  times_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NNDeskResultinfo.times)
}

// repeated .userinfo.NNUserResultinfo userlist = 5;
inline int NNDeskResultinfo::userlist_size() const {
  return userlist_.size();
}
inline void NNDeskResultinfo::clear_userlist() {
  userlist_.Clear();
}
inline const ::userinfo::NNUserResultinfo& NNDeskResultinfo::userlist(int index) const {
  // @@protoc_insertion_point(field_get:userinfo.NNDeskResultinfo.userlist)
  return userlist_.Get(index);
}
inline ::userinfo::NNUserResultinfo* NNDeskResultinfo::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:userinfo.NNDeskResultinfo.userlist)
  return userlist_.Mutable(index);
}
inline ::userinfo::NNUserResultinfo* NNDeskResultinfo::add_userlist() {
  // @@protoc_insertion_point(field_add:userinfo.NNDeskResultinfo.userlist)
  return userlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userinfo::NNUserResultinfo >*
NNDeskResultinfo::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:userinfo.NNDeskResultinfo.userlist)
  return &userlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userinfo::NNUserResultinfo >&
NNDeskResultinfo::userlist() const {
  // @@protoc_insertion_point(field_list:userinfo.NNDeskResultinfo.userlist)
  return userlist_;
}

// -------------------------------------------------------------------

// NNUserResultinfo

// optional uint32 uid = 1;
inline void NNUserResultinfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 NNUserResultinfo::uid() const {
  // @@protoc_insertion_point(field_get:userinfo.NNUserResultinfo.uid)
  return uid_;
}
inline void NNUserResultinfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NNUserResultinfo.uid)
}

// optional uint32 pos = 2;
inline void NNUserResultinfo::clear_pos() {
  pos_ = 0u;
}
inline ::google::protobuf::uint32 NNUserResultinfo::pos() const {
  // @@protoc_insertion_point(field_get:userinfo.NNUserResultinfo.pos)
  return pos_;
}
inline void NNUserResultinfo::set_pos(::google::protobuf::uint32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NNUserResultinfo.pos)
}

// optional uint32 times = 3;
inline void NNUserResultinfo::clear_times() {
  times_ = 0u;
}
inline ::google::protobuf::uint32 NNUserResultinfo::times() const {
  // @@protoc_insertion_point(field_get:userinfo.NNUserResultinfo.times)
  return times_;
}
inline void NNUserResultinfo::set_times(::google::protobuf::uint32 value) {
  
  times_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NNUserResultinfo.times)
}

// optional uint32 result = 4;
inline void NNUserResultinfo::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 NNUserResultinfo::result() const {
  // @@protoc_insertion_point(field_get:userinfo.NNUserResultinfo.result)
  return result_;
}
inline void NNUserResultinfo::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NNUserResultinfo.result)
}

// optional uint32 value = 5;
inline void NNUserResultinfo::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 NNUserResultinfo::value() const {
  // @@protoc_insertion_point(field_get:userinfo.NNUserResultinfo.value)
  return value_;
}
inline void NNUserResultinfo::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NNUserResultinfo.value)
}

// optional uint32 coin = 6;
inline void NNUserResultinfo::clear_coin() {
  coin_ = 0u;
}
inline ::google::protobuf::uint32 NNUserResultinfo::coin() const {
  // @@protoc_insertion_point(field_get:userinfo.NNUserResultinfo.coin)
  return coin_;
}
inline void NNUserResultinfo::set_coin(::google::protobuf::uint32 value) {
  
  coin_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NNUserResultinfo.coin)
}

// optional int32 gamevalue = 7;
inline void NNUserResultinfo::clear_gamevalue() {
  gamevalue_ = 0;
}
inline ::google::protobuf::int32 NNUserResultinfo::gamevalue() const {
  // @@protoc_insertion_point(field_get:userinfo.NNUserResultinfo.gamevalue)
  return gamevalue_;
}
inline void NNUserResultinfo::set_gamevalue(::google::protobuf::int32 value) {
  
  gamevalue_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NNUserResultinfo.gamevalue)
}

// optional uint32 rank = 8;
inline void NNUserResultinfo::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 NNUserResultinfo::rank() const {
  // @@protoc_insertion_point(field_get:userinfo.NNUserResultinfo.rank)
  return rank_;
}
inline void NNUserResultinfo::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NNUserResultinfo.rank)
}

// optional uint32 leftvalue = 9;
inline void NNUserResultinfo::clear_leftvalue() {
  leftvalue_ = 0u;
}
inline ::google::protobuf::uint32 NNUserResultinfo::leftvalue() const {
  // @@protoc_insertion_point(field_get:userinfo.NNUserResultinfo.leftvalue)
  return leftvalue_;
}
inline void NNUserResultinfo::set_leftvalue(::google::protobuf::uint32 value) {
  
  leftvalue_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NNUserResultinfo.leftvalue)
}

// -------------------------------------------------------------------

// NnUserBetList

// repeated .userinfo.NnUserBet userlist = 1;
inline int NnUserBetList::userlist_size() const {
  return userlist_.size();
}
inline void NnUserBetList::clear_userlist() {
  userlist_.Clear();
}
inline const ::userinfo::NnUserBet& NnUserBetList::userlist(int index) const {
  // @@protoc_insertion_point(field_get:userinfo.NnUserBetList.userlist)
  return userlist_.Get(index);
}
inline ::userinfo::NnUserBet* NnUserBetList::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:userinfo.NnUserBetList.userlist)
  return userlist_.Mutable(index);
}
inline ::userinfo::NnUserBet* NnUserBetList::add_userlist() {
  // @@protoc_insertion_point(field_add:userinfo.NnUserBetList.userlist)
  return userlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userinfo::NnUserBet >*
NnUserBetList::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:userinfo.NnUserBetList.userlist)
  return &userlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userinfo::NnUserBet >&
NnUserBetList::userlist() const {
  // @@protoc_insertion_point(field_list:userinfo.NnUserBetList.userlist)
  return userlist_;
}

// -------------------------------------------------------------------

// NnUserBet

// optional uint32 userpos = 1;
inline void NnUserBet::clear_userpos() {
  userpos_ = 0u;
}
inline ::google::protobuf::uint32 NnUserBet::userpos() const {
  // @@protoc_insertion_point(field_get:userinfo.NnUserBet.userpos)
  return userpos_;
}
inline void NnUserBet::set_userpos(::google::protobuf::uint32 value) {
  
  userpos_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnUserBet.userpos)
}

// optional uint32 times = 2;
inline void NnUserBet::clear_times() {
  times_ = 0u;
}
inline ::google::protobuf::uint32 NnUserBet::times() const {
  // @@protoc_insertion_point(field_get:userinfo.NnUserBet.times)
  return times_;
}
inline void NnUserBet::set_times(::google::protobuf::uint32 value) {
  
  times_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnUserBet.times)
}

// optional uint32 betnum = 3;
inline void NnUserBet::clear_betnum() {
  betnum_ = 0u;
}
inline ::google::protobuf::uint32 NnUserBet::betnum() const {
  // @@protoc_insertion_point(field_get:userinfo.NnUserBet.betnum)
  return betnum_;
}
inline void NnUserBet::set_betnum(::google::protobuf::uint32 value) {
  
  betnum_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnUserBet.betnum)
}

// -------------------------------------------------------------------

// NnMatchInfo

// optional uint32 matchid = 1;
inline void NnMatchInfo::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 NnMatchInfo::matchid() const {
  // @@protoc_insertion_point(field_get:userinfo.NnMatchInfo.matchid)
  return matchid_;
}
inline void NnMatchInfo::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnMatchInfo.matchid)
}

// optional uint32 trunindex = 2;
inline void NnMatchInfo::clear_trunindex() {
  trunindex_ = 0u;
}
inline ::google::protobuf::uint32 NnMatchInfo::trunindex() const {
  // @@protoc_insertion_point(field_get:userinfo.NnMatchInfo.trunindex)
  return trunindex_;
}
inline void NnMatchInfo::set_trunindex(::google::protobuf::uint32 value) {
  
  trunindex_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnMatchInfo.trunindex)
}

// optional uint32 curnum = 3;
inline void NnMatchInfo::clear_curnum() {
  curnum_ = 0u;
}
inline ::google::protobuf::uint32 NnMatchInfo::curnum() const {
  // @@protoc_insertion_point(field_get:userinfo.NnMatchInfo.curnum)
  return curnum_;
}
inline void NnMatchInfo::set_curnum(::google::protobuf::uint32 value) {
  
  curnum_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnMatchInfo.curnum)
}

// optional int32 gamevalue = 4;
inline void NnMatchInfo::clear_gamevalue() {
  gamevalue_ = 0;
}
inline ::google::protobuf::int32 NnMatchInfo::gamevalue() const {
  // @@protoc_insertion_point(field_get:userinfo.NnMatchInfo.gamevalue)
  return gamevalue_;
}
inline void NnMatchInfo::set_gamevalue(::google::protobuf::int32 value) {
  
  gamevalue_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnMatchInfo.gamevalue)
}

// optional int32 ifmatch = 5;
inline void NnMatchInfo::clear_ifmatch() {
  ifmatch_ = 0;
}
inline ::google::protobuf::int32 NnMatchInfo::ifmatch() const {
  // @@protoc_insertion_point(field_get:userinfo.NnMatchInfo.ifmatch)
  return ifmatch_;
}
inline void NnMatchInfo::set_ifmatch(::google::protobuf::int32 value) {
  
  ifmatch_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnMatchInfo.ifmatch)
}

// -------------------------------------------------------------------

// NnSelfRoomInfo

// optional uint32 roomid = 1;
inline void NnSelfRoomInfo::clear_roomid() {
  roomid_ = 0u;
}
inline ::google::protobuf::uint32 NnSelfRoomInfo::roomid() const {
  // @@protoc_insertion_point(field_get:userinfo.NnSelfRoomInfo.roomid)
  return roomid_;
}
inline void NnSelfRoomInfo::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnSelfRoomInfo.roomid)
}

// optional bytes roomcode = 2;
inline void NnSelfRoomInfo::clear_roomcode() {
  roomcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NnSelfRoomInfo::roomcode() const {
  // @@protoc_insertion_point(field_get:userinfo.NnSelfRoomInfo.roomcode)
  return roomcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NnSelfRoomInfo::set_roomcode(const ::std::string& value) {
  
  roomcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userinfo.NnSelfRoomInfo.roomcode)
}
inline void NnSelfRoomInfo::set_roomcode(const char* value) {
  
  roomcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userinfo.NnSelfRoomInfo.roomcode)
}
inline void NnSelfRoomInfo::set_roomcode(const void* value, size_t size) {
  
  roomcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userinfo.NnSelfRoomInfo.roomcode)
}
inline ::std::string* NnSelfRoomInfo::mutable_roomcode() {
  
  // @@protoc_insertion_point(field_mutable:userinfo.NnSelfRoomInfo.roomcode)
  return roomcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NnSelfRoomInfo::release_roomcode() {
  // @@protoc_insertion_point(field_release:userinfo.NnSelfRoomInfo.roomcode)
  
  return roomcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NnSelfRoomInfo::set_allocated_roomcode(::std::string* roomcode) {
  if (roomcode != NULL) {
    
  } else {
    
  }
  roomcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomcode);
  // @@protoc_insertion_point(field_set_allocated:userinfo.NnSelfRoomInfo.roomcode)
}

// optional uint32 endtime = 3;
inline void NnSelfRoomInfo::clear_endtime() {
  endtime_ = 0u;
}
inline ::google::protobuf::uint32 NnSelfRoomInfo::endtime() const {
  // @@protoc_insertion_point(field_get:userinfo.NnSelfRoomInfo.endtime)
  return endtime_;
}
inline void NnSelfRoomInfo::set_endtime(::google::protobuf::uint32 value) {
  
  endtime_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnSelfRoomInfo.endtime)
}

// optional uint32 createuid = 4;
inline void NnSelfRoomInfo::clear_createuid() {
  createuid_ = 0u;
}
inline ::google::protobuf::uint32 NnSelfRoomInfo::createuid() const {
  // @@protoc_insertion_point(field_get:userinfo.NnSelfRoomInfo.createuid)
  return createuid_;
}
inline void NnSelfRoomInfo::set_createuid(::google::protobuf::uint32 value) {
  
  createuid_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnSelfRoomInfo.createuid)
}

// optional uint32 basecoin = 5;
inline void NnSelfRoomInfo::clear_basecoin() {
  basecoin_ = 0u;
}
inline ::google::protobuf::uint32 NnSelfRoomInfo::basecoin() const {
  // @@protoc_insertion_point(field_get:userinfo.NnSelfRoomInfo.basecoin)
  return basecoin_;
}
inline void NnSelfRoomInfo::set_basecoin(::google::protobuf::uint32 value) {
  
  basecoin_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnSelfRoomInfo.basecoin)
}

// optional uint32 basetimes = 6;
inline void NnSelfRoomInfo::clear_basetimes() {
  basetimes_ = 0u;
}
inline ::google::protobuf::uint32 NnSelfRoomInfo::basetimes() const {
  // @@protoc_insertion_point(field_get:userinfo.NnSelfRoomInfo.basetimes)
  return basetimes_;
}
inline void NnSelfRoomInfo::set_basetimes(::google::protobuf::uint32 value) {
  
  basetimes_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnSelfRoomInfo.basetimes)
}

// optional uint32 gamenum = 7;
inline void NnSelfRoomInfo::clear_gamenum() {
  gamenum_ = 0u;
}
inline ::google::protobuf::uint32 NnSelfRoomInfo::gamenum() const {
  // @@protoc_insertion_point(field_get:userinfo.NnSelfRoomInfo.gamenum)
  return gamenum_;
}
inline void NnSelfRoomInfo::set_gamenum(::google::protobuf::uint32 value) {
  
  gamenum_ = value;
  // @@protoc_insertion_point(field_set:userinfo.NnSelfRoomInfo.gamenum)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace userinfo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_userinfo_2eproto__INCLUDED
